{"version":3,"sources":["assets/img/logo.png","assets/img/preloader.svg","assets/img/gender.svg","assets/img/homeword.svg","assets/img/species.svg","assets/img/films.svg","assets/img/birth_year.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","API/api.js","store/peoplesReduser.js","utils/objectsHelper.js","store/modalReduser.js","components/Card/Card.jsx","components/Content/Content.jsx","components/Search/Search.jsx","utils/useDebounce.js","components/Preloader/Preloader.jsx","store/appReduser.js","components/Content/ContentContainer.jsx","components/Portal/Portal.jsx","components/Modal/Modalbody.jsx","components/Modal/Modal.jsx","App.js","store/store.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","instance","axios","baseURL","API","page","get","url","newUrl","replace","error","console","log","text","initialState","data","maxPages","isLoading","isSearching","films","modalIsOpen","peoplesReduser","state","action","type","concat","payload","peoples","filter","itemB","some","itemA","name","Math","ceil","total","getDataFromArray","arr","a","length","Promise","all","map","then","item","isShow","setModalDataSuccess","setSpecies","setFilms","setHomeword","setSpeciesThunk","dispatch","species","speciesPromise","homeworldPromise","homeworld","filmsPromise","modalReduser","homeword","Card","setModalData","useState","useEffect","res","onClick","document","querySelector","classList","add","Content","key","Search","props","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","getDataFromSearching","placeholder","onFocus","onKeyPress","e","keyCode","target","onChange","onBlur","getPeoples","Preloader","starShip","initialized","appReduser","increasePage","ContentContainer","handleScroll","event","body","getBoundingClientRect","bottom","handleChangePage","setState","this","window","addEventListener","timerHandle","setInitializedSuccess","removeEventListener","isSearchingToggle","React","Component","connect","app","results","totalPeoples","count","portalRoot","getElementById","Portal","el","createElement","appendChild","removeChild","children","ReactDOM","createPortal","Modalbody","closeModal","width","height","viewBox","d","stroke","strokeWidth","strokeLinecap","birth_year","speciesIcon","gender","film","Modal","hideModal","contains","remove","App","modal","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","appRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4da9dc36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.46b9ea74.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.32560bd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/gender.65d3aac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/homeword.5102a4cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/species.772f0da5.svg\";","module.exports = __webpack_public_path__ + \"static/media/films.33cdf1af.svg\";","module.exports = __webpack_public_path__ + \"static/media/birth_year.63f0c901.svg\";","import React from 'react';\nimport '../Header/Header.scss';\nimport logo from '../../assets/img/logo.png';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo-wrap\">\n                <img src={logo} alt=\"logo\" />\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport '../Footer/Footer.scss';\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n           <p>STAR WARS CHARACTER Encyclopedia, 2020</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import * as axios from 'axios';\n\n\nconst instance = axios.create({\n    baseURL: 'https://swapi.dev/api/',\n})\n\nexport const API = {\n    getPeoples(page = 1) {\n        return instance.get(`people/?page=${page}`)\n    },\n\n    getInfo(url) {\n\n        let newUrl = url.replace(/http/gi, 'https');\n\n        try {\n            return axios.get(newUrl)\n        } catch (error) {\n            console.log(error)\n        }\n\n    },\n    \n    getPeoplesFromSearch(text) {\n        try {\n            return instance.get(`people/?search=${text}`)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}","import { API } from '../API/api'\n\nconst GET_PEOPLES_SUCCESS = 'GET_PEOPLES_SUCCESS';\nconst IS_LOADING = 'IS_LOADING';\nconst GET_INFO_FROM_ARRAY = 'GET_INFO_FROM_ARRAY';\nconst GET_DATA_FROM_SEARCHING = \"GET_DATA_FROM_SEARCHING\";\nconst IS_SEARCHING_TOGGLE = \"IS_SEARCHING_TOGGLE\";\n\n\nlet initialState = {\n    data: [],\n    maxPages: null,\n    isLoading: true,\n    isSearching: false,\n    films: null,\n    modalIsOpen: false,\n}\n\n\nconst peoplesReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLES_SUCCESS:\n\n            return {\n                ...state,\n                data: state.data.concat(action.payload.peoples.filter( itemB => {\n                    return !state.data.some( itemA => itemB.name === itemA.name )\n                 })),\n                maxPages: Math.ceil(action.payload.total / 10),\n                films: action.payload.films\n            }\n\n        case IS_LOADING:\n            return {\n                ...state,\n                isLoading: false\n            }\n\n        case GET_DATA_FROM_SEARCHING: \n        return {\n            ...state,\n            data: action.payload\n        }\n\n        case IS_SEARCHING_TOGGLE:\n            return {\n                ...state,\n                isSearching: !state.isSearching\n            }\n\n\n        default:\n            return state\n    }\n}\n\nexport const getDataFromSearchingSuccess = (data) => {\n    return {\n        type: GET_DATA_FROM_SEARCHING,\n        payload: data\n    }\n}\n\n\n\nexport const getPeoplesSuccess = (data, totalPeoples) => {\n    return {\n        type: GET_PEOPLES_SUCCESS,\n        payload: {\n            peoples: data,\n            total: totalPeoples,\n        },\n    }\n}\n\nexport const getInfoSuccess = (data, name) => {\n    return {\n        type: GET_INFO_FROM_ARRAY,\n        payload: {\n            name: name,\n            data: data,\n        }\n    }\n}\n\nexport const isLoading = () => ({ type: IS_LOADING });\nexport const isSearchingToggle = () => ({ type: IS_SEARCHING_TOGGLE });\n\n\n\nexport const getPeoples = (page) => {\n    return async dispatch => {\n        let res = await API.getPeoples(page)\n        dispatch(getPeoplesSuccess(res.data.results, res.data.count))\n        dispatch(isLoading())\n    }\n}\n\nexport const getDataFromSearching = (text) => {\n    return async dispatch => {\n         let res = await API.getPeoplesFromSearch(text) \n        dispatch(getDataFromSearchingSuccess(res.data.results))\n        dispatch(isLoading())\n    }\n}\n\n\n\n\nexport default peoplesReduser;","import { API } from \"../API/api\";\n\nexport const getDataFromArray = async (arr, name) => {\n\n    if (arr.length > 0) {\n        return await Promise.all(arr.map(async url => API.getInfo(url))).then(data => {\n            return data.map(item => item.data[name])\n        })\n    }\n\n    return 'Unknown'\n}\n\n\nexport const debounce = (callback, data, delay) => {\n    debugger\n    let timeout;\n    return () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(callback(data), delay);\n    }\n}","import { getDataFromArray } from '../utils/objectsHelper';\nimport { API } from '../API/api';\n\n\nconst SET_MODAL_DATA = 'SET_MODAL_DATA';\nconst HIDE_MODAL = 'HIDE_MODAL';\nconst GET_SPECIES = 'GET_SPECIES';\nconst GET_FILMS = 'GET_FILMS';\nconst GET_HOMEWOLRD = 'GET_HOMEWOLRD';\nconst IS_LOADING = 'IS_LOADING';\n\n\nlet initialState = {\n    data: null,\n    isShow: false,\n    isLoading: false,\n}\n\nconst modalReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MODAL_DATA:\n            return {\n                ...state,\n                data: action.payload,\n                isShow: true,\n            }\n\n        case HIDE_MODAL:\n            return {\n                ...state,\n                isShow: false,\n                isLoading: false\n            }\n\n        case GET_SPECIES:\n            return {\n                ...state,\n                data: { ...state.data, species: action.payload }\n            }\n        case GET_FILMS:\n            return {\n                ...state,\n                data: { ...state.data, films: action.payload }\n            }\n        case GET_HOMEWOLRD:\n            return {\n                ...state,\n                data: { ...state.data, homeword: action.payload }\n            }\n            case IS_LOADING:\n                return {\n                    ...state,\n                    isLoading: true\n                }\n\n            \n        default:\n            return state\n    }\n}\n\nexport const setModalDataSuccess = (data) => ({ type: SET_MODAL_DATA, payload: data });\nexport const setSpecies = (data) => ({ type: GET_SPECIES, payload: data });\nexport const setFilms = (data) => ({ type: GET_FILMS, payload: data });\nexport const setHomeword = (data) => ({ type: GET_HOMEWOLRD, payload: data });\nexport const isLoading = () => ({ type: IS_LOADING });\n\n\n\nexport const hideModal = () => ({ type: HIDE_MODAL });\n\nexport const setModalData = (data) => {\n    return async dispatch => {\n\n        /* let speciesPromise = await getDataFromArray(data.species, 'name') */\n        /* let homeworldPromise =  API.getInfo(data.homeworld) */\n        /*     let filmsPromise =  getDataFromArray(data.films, 'title') */\n        /* let species = await speciesPromise; */\n        /* let homeworld = await homeworldPromise;  */\n        /* let films = await filmsPromise;  */\n        dispatch(setModalDataSuccess(data))\n        /* dispatch(setSpecies(speciesPromise)) */\n        /* dispatch(setHomeword(homeworld.data.name))  */\n        /* dispatch(setFilms(films))   */\n        dispatch(setSpeciesThunk(data))\n    }\n}\n\n\nexport const setSpeciesThunk = (data) => {\n    return async dispatch => {\n\n        let speciesPromise = await getDataFromArray(data.species, 'name')\n        let homeworldPromise = API.getInfo(data.homeworld)\n        let filmsPromise = getDataFromArray(data.films, 'title')\n\n        let species = await speciesPromise;\n        let homeworld = await homeworldPromise;\n        let films = await filmsPromise;\n        \n        dispatch(setSpecies(species))\n        dispatch(setHomeword(homeworld.data.name))\n        dispatch(setFilms(films))\n        dispatch(isLoading())\n\n    }\n}\n\nexport default modalReduser;","import React, { useState, useEffect } from 'react';\nimport '../Card/Card.scss';\nimport PropTypes from 'prop-types';\nimport { API } from '../../API/api';\n\nconst Card = ({ data, setModalData, setSpeciesThunk }) => {\n\n    let [species, setSpecies] = useState('unknown')\n\n    let openModal = () => {\n        setModalData(data)\n        document.querySelector('body').classList.add('scrolling-stop')\n\n    }\n\n    useEffect(() => {\n        if (data.species.length > 0) {\n            API.getInfo(data.species[0]).then(res => {\n                setSpecies(res.data.name)\n            })\n        }\n       \n\n    }, [data])\n    return (\n        <li className=\"card\" onClick={openModal} >\n            <span className=\"card__avatar\">{data.name[0]}</span>\n            <span className=\"card__name\">{data.name}</span>\n            <span className=\"card__species\">\n                {\n                    species\n                }\n            </span>\n        </li>\n    )\n}\n\nCard.propTypes = {\n    data: PropTypes.object\n};\n\nexport default Card;","import React from 'react';\nimport '../Content/Content.scss';\nimport Card from '../Card/Card';\n\n\n\nconst Content = ({ data, isLoading, setModalData, setSpeciesThunk }) => {\n    return (\n\n        <ul className=\"content__card-list\">\n            {\n                isLoading\n                    ? 'Please wait...'\n                    : data.map((item) => {\n\n                        return <Card key={item.name}\n                        setModalData={setModalData}\n                        setSpeciesThunk={setSpeciesThunk}\n                            data={item}\n                        />\n                    })\n            }\n        </ul>\n\n\n    )\n}\n\n\n\nexport default Content;","import React, { useEffect, useState } from 'react';\nimport '../Search/Search.scss';\nimport useDebounce from '../../utils/useDebounce';\n\nconst Search = (props) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n    useEffect(\n        () => {\n            if (debouncedSearchTerm.length > 0) {\n                console.log(debouncedSearchTerm.length)\n                props.getDataFromSearching(debouncedSearchTerm)\n            } /* else if (debouncedSearchTerm.length === 0) {\n                props.getPeoples(1)\n            } */\n        },\n        [debouncedSearchTerm]\n    );\n\n    return (\n        <>\n            <input className=\"search\" type=\"text\" placeholder=\"Search by name\"\n\n                onFocus={() => {\n                    props.isSearching()\n                }}\n\n                onKeyPress={e => {\n                    if (e.keyCode === 13) {\n                        setSearchTerm(e.target.value)\n                    }\n                }}\n\n                onChange={e => {\n\n                    setSearchTerm(e.target.value)\n                }}\n                onBlur={() => {\n                    props.getPeoples()\n                    props.isSearching()\n                }}></input>\n        </>\n    )\n}\n\nexport default Search;","import { useState, useEffect } from 'react';\n\n\nexport default function useDebounce(value, delay) {\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n\n    [value, delay]\n  );\n\n  return debouncedValue;\n}","import React from 'react';\nimport starShip from '../../assets/img/preloader.svg';\nimport './Preloader.scss'\n\nconst Preloader = (props) => {\n    return (\n        <div className=\"preloader__wrapper\">\n            <div className=\"preloader\">\n                <div className=\"starship\">\n                    <img src={starShip}></img>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Preloader;","\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport default appReduser;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getPeoples, getDataFromSearching, isSearchingToggle } from '../../store/peoplesReduser';\nimport { setModalData, setSpeciesThunk } from '../../store/modalReduser';\n\nimport Content from '../Content/Content';\nimport Search from '../Search/Search';\nimport Preloader from '../Preloader/Preloader';\nimport { setInitializedSuccess } from '../../store/appReduser';\n\n\nconst increasePage = (state) => {\n    return { page: state.page + 1 }\n}\n\n\nclass ContentContainer extends React.Component {\n    state = {\n        page: 1,\n    }\n\n    componentDidMount() {\n        if (!this.props.isSearching) {\n            window.addEventListener('scroll', this.handleScroll);\n            this.props.getPeoples(this.state.page)          \n        }\n        this.timerHandle = setTimeout(() => {\n            this.props.setInitializedSuccess()\n        }, 3000)\n\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n        if (this.timerHandle) {\n            clearTimeout(this.timerHandle);\n            this.timerHandle = 0;\n        }\n    }\n\n    handleScroll = (event) => {\n        if (event.target.body.getBoundingClientRect().bottom < 700) {\n            console.log(event.target.body.getBoundingClientRect().bottom)\n            this.handleChangePage()\n        }\n    }\n\n    handleChangePage = () => {\n        if (this.props.maxPages > this.state.page) {\n            this.setState(increasePage)\n            this.props.getPeoples(this.state.page)\n        }\n    }\n\n\n\n    render() {\n        return (\n            <main className=\"content\">\n                {(!this.props.isLoading && this.props.initialized)\n                    ? <>\n                        <Search getDataFromSearching={this.props.getDataFromSearching}\n                            getPeoples={this.props.getPeoples}\n                            isSearching={this.props.isSearchingToggle} />\n                        <Content\n                            data={this.props.data}\n                            isLoading={this.props.isLoading}\n                            setModalData={this.props.setModalData}\n                            setSpeciesThunk={this.props.setSpeciesThunk}\n                        />\n                    </>\n                    : <Preloader />\n                }\n\n            </main>\n\n        )\n    }\n\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    data: state.peoples.data,\n    isLoading: state.peoples.isLoading,\n    maxPages: state.peoples.maxPages,\n    isSearching: state.peoples.isSearching,\n})\n\nexport default connect(mapStateToProps,\n    {\n        setInitializedSuccess,\n        getPeoples,\n        setModalData,\n        setSpeciesThunk,\n        getDataFromSearching,\n        isSearchingToggle\n    })(ContentContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst portalRoot = document.getElementById('modal-root');\n\n\nclass Portal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return ReactDOM.createPortal(children, this.el );\n  }\n}\n\n\nexport default Portal;","import React from 'react';\n\nimport gender from '../../assets/img/gender.svg';\nimport homeword from '../../assets/img/homeword.svg';\nimport speciesIcon from '../../assets/img/species.svg';\nimport films from '../../assets/img/films.svg';\nimport birth_year from '../../assets/img/birth_year.svg';\n\n\n\nconst Modalbody = ({ data, closeModal }) => {\n\n    return (\n\n                <div className=\"modal-body\">\n                    <div className=\"modal-header\">\n                        <div className='card__avatar'>{data.name[0]}</div>\n                        <p className=\"card__name\">{data.name}</p>\n                        <button className=\"modal_close\" onClick={closeModal}>\n                            <svg  width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n                                <path d=\"M1 13L13 1M13 13L1 1\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <ul className=\"modal-footer\">\n                        <li className=\"modal__item\">\n                            <div className=\"modal__item-title\">\n                                <img src={birth_year} alt='icon' />\n                                <span>Birth year </span>\n                            </div>\n\n                            <span>{data.birth_year}</span>\n                        </li>\n\n                        <li className=\"modal__item\">\n                            <div className=\"modal__item-title\">\n                                <img src={speciesIcon} alt='icon' />\n                                <span>species</span>\n                            </div>\n                            <span>{data.species ? data.species : \"loading...\"}</span>\n                        </li>\n                        <li className=\"modal__item\">\n                            <div className=\"modal__item-title\">\n                                <img src={gender} alt='icon' />\n                                <span>Gender </span>\n                            </div>\n\n                            <span>{data.gender}</span>\n                        </li>\n                        <li className=\"modal__item\">\n                            <div className=\"modal__item-title\">\n                                <img src={homeword} alt='icon' />\n                                <span>Homeworld </span>\n                            </div>\n\n                            <span>{ data.homeworld ? data.homeword : \"loading...\" }</span>\n                        </li>\n                        <li className=\"modal__item\">\n                            <div className=\"modal__item-title\">\n                                <img src={films} alt='icon' />\n                                <span>Films </span>\n                            </div>\n\n                            <span>\n                                {(data.films)\n                                    ? data.films.map(film => <span key={film}>{film}</span>)\n                                    : \"loading...\"}\n                            </span>\n                        </li>\n                    </ul>\n\n                </div>\n\n    )\n}\n\n\n\nexport default Modalbody;","import React from 'react';\nimport '../Modal/Modal.scss';\nimport Portal from '../Portal/Portal';\nimport Modalbody from './Modalbody';\nimport Preloader from '../Preloader/Preloader';\n\n\n\nconst Modal = ({ data, isShow, hideModal, isLoading }) => {\n\n\n    const closeModal = (e) => {\n        if (e.target.classList.contains('modal-wrapper') || e.target.classList.contains('modal_close')) {\n            hideModal()\n            document.querySelector('body').classList.remove('scrolling-stop')\n        }\n    }\n\n\n    return (\n        isShow && <Portal>\n            <div className=\"modal-wrapper\" onClick={closeModal}>\n\n            {isLoading \n            ? <Modalbody data={data} closeModal={closeModal} /> \n            : <Preloader/>}\n    \n\n            </div>\n        </Portal>\n\n    )\n}\n\n\n\nexport default Modal;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport ContentContainer from './components/Content/ContentContainer';\nimport Modal from './components/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { hideModal } from './store/modalReduser';\n\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className={'App' + (this.props.modal.isShow ? ' blur' : '') }>\n        <Header />\n        <ContentContainer />\n        <Footer />\n\n        { this.props.modal.data && <Modal {...this.props.modal} hideModal={this.props.hideModal}/>}\n        \n\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  peoples: state.peoples,\n  modal: state.modal,\n})\n\n\nexport default connect(mapStateToProps, { hideModal })(App);","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport appReduser from \"./appReduser\";\nimport peoplesReduser from \"./peoplesReduser\";\nimport modalReduser from \"./modalReduser\";\n\n\nlet reducers = combineReducers({\n    app: appReduser,\n    peoples: peoplesReduser,\n    modal: modalReduser, \n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nconst appRoot = document.getElementById('root');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n \n        <App />\n  \n\n    </Provider>\n  </React.StrictMode>,\n  appRoot\n);\n\n"],"sourceRoot":""}