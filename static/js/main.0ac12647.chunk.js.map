{"version":3,"sources":["assets/img/logo.png","assets/img/preloader.svg","assets/img/gender.svg","assets/img/homeword.svg","assets/img/species.svg","assets/img/films.svg","assets/img/birth_year.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","API/api.js","store/peoplesReduser.js","utils/getDataFromArray.js","store/modalReduser.js","components/Card/Card.jsx","components/Content/Content.jsx","components/Search/Search.jsx","utils/useDebounce.js","components/Preloader/Preloader.jsx","store/appReduser.js","components/Content/ContentContainer.jsx","components/Portal/Portal.jsx","components/Modal/Modalbody.jsx","components/Modal/Modal.jsx","App.js","store/store.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","instance","axios","baseURL","API","page","get","url","newUrl","replace","error","console","log","text","initialState","data","maxPages","isLoading","isSearching","films","modalIsOpen","peoplesReduser","state","action","type","concat","payload","peoples","filter","itemB","some","itemA","name","Math","ceil","total","getDataFromArray","arr","a","length","Promise","all","map","then","item","isShow","setModalDataSuccess","setSpecies","setFilms","setHomeword","setSpeciesThunk","dispatch","species","speciesPromise","homeworldPromise","homeworld","filmsPromise","modalReduser","homeword","Card","setModalData","useState","useEffect","res","onClick","document","querySelector","classList","add","Content","TransitionGroup","CSSTransition","in","key","timeout","classNames","Search","props","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","active","setActive","getDataFromSearching","htmlFor","id","onFocus","onKeyPress","e","keyCode","target","onChange","onBlur","getPeoples","width","height","viewBox","fill","xmlns","d","Preloader","starShip","initialized","appReduser","increasePage","ContentContainer","handleScroll","event","body","getBoundingClientRect","bottom","handleChangePage","setState","this","window","addEventListener","timerHandle","setInitializedSuccess","removeEventListener","isSearchingToggle","React","Component","connect","app","results","totalPeoples","count","portalRoot","getElementById","Portal","el","createElement","appendChild","removeChild","children","ReactDOM","createPortal","Modalbody","closeModal","birth_year","speciesIcon","gender","film","Modal","hideModal","contains","remove","enter","exit","App","modal","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","appRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0ac12647.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.46b9ea74.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.32560bd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/gender.65d3aac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/homeword.5102a4cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/species.772f0da5.svg\";","module.exports = __webpack_public_path__ + \"static/media/films.33cdf1af.svg\";","module.exports = __webpack_public_path__ + \"static/media/birth_year.63f0c901.svg\";","import React from 'react';\nimport '../Header/Header.scss';\nimport logo from '../../assets/img/logo.png';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo-wrap\">\n                <img src={logo} alt=\"logo\" />\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport '../Footer/Footer.scss';\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n           <p>STAR WARS CHARACTER Encyclopedia, 2020</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import * as axios from 'axios';\n\n\nconst instance = axios.create({\n    baseURL: 'https://swapi.dev/api/',\n})\n\nexport const API = {\n    getPeoples(page = 1) {\n        return instance.get(`people/?page=${page}`)\n    },\n\n    getInfo(url) {\n\n        let newUrl = url.replace(/http/gi, 'https');\n\n        try {\n            return axios.get(newUrl)\n        } catch (error) {\n            console.log(error)\n        }\n\n    },\n    \n    getPeoplesFromSearch(text) {\n        try {\n            return instance.get(`people/?search=${text}`)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}","import { API } from '../API/api'\n\nconst GET_PEOPLES_SUCCESS = 'GET_PEOPLES_SUCCESS';\nconst IS_LOADING = 'IS_LOADING';\nconst GET_INFO_FROM_ARRAY = 'GET_INFO_FROM_ARRAY';\nconst GET_DATA_FROM_SEARCHING = \"GET_DATA_FROM_SEARCHING\";\nconst IS_SEARCHING_TOGGLE = \"IS_SEARCHING_TOGGLE\";\n\n\nlet initialState = {\n    data: [],\n    maxPages: null,\n    isLoading: true,\n    isSearching: false,\n    films: null,\n    modalIsOpen: false,\n}\n\n\nconst peoplesReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLES_SUCCESS:\n\n            return {\n                ...state,\n                data: state.data.concat(action.payload.peoples.filter( itemB => {\n                    return !state.data.some( itemA => itemB.name === itemA.name )\n                 })),\n                maxPages: Math.ceil(action.payload.total / 10),\n            }\n\n        case IS_LOADING:\n            return {\n                ...state,\n                isLoading: false\n            }\n\n        case GET_DATA_FROM_SEARCHING: \n        return {\n            ...state,\n            data: action.payload\n        }\n\n        case IS_SEARCHING_TOGGLE:\n            return {\n                ...state,\n                isSearching: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\nexport const getDataFromSearchingSuccess = (data) => {\n    return {\n        type: GET_DATA_FROM_SEARCHING,\n        payload: data\n    }\n}\n\n\n\nexport const getPeoplesSuccess = (data, totalPeoples) => {\n    return {\n        type: GET_PEOPLES_SUCCESS,\n        payload: {\n            peoples: data,\n            total: totalPeoples,\n        },\n    }\n}\n\nexport const getInfoSuccess = (data, name) => {\n    return {\n        type: GET_INFO_FROM_ARRAY,\n        payload: {\n            name: name,\n            data: data,\n        }\n    }\n}\n\nexport const isLoading = () => ({ type: IS_LOADING });\nexport const isSearchingToggle = (data) => ({ type: IS_SEARCHING_TOGGLE, payload: data });\n\n\n\nexport const getPeoples = (page) => {\n    return async dispatch => {\n        let res = await API.getPeoples(page)\n        dispatch(getPeoplesSuccess(res.data.results, res.data.count))\n        dispatch(isLoading())\n    }\n}\n\nexport const getDataFromSearching = (text) => {\n    return async dispatch => {\n         let res = await API.getPeoplesFromSearch(text) \n        dispatch(getDataFromSearchingSuccess(res.data.results))\n        /* dispatch(isLoading()) */\n    }\n}\n\n\n\n\nexport default peoplesReduser;","import { API } from \"../API/api\";\n\nexport const getDataFromArray = async (arr, name) => {\n\n    if (arr.length > 0) {\n        return await Promise.all(arr.map(async url => API.getInfo(url))).then(data => {\n            return data.map(item => item.data[name])\n        })\n    }\n\n    return 'Unknown'\n}","import { getDataFromArray } from '../utils/getDataFromArray';\nimport { API } from '../API/api';\n\n\nconst SET_MODAL_DATA = 'SET_MODAL_DATA';\nconst HIDE_MODAL = 'HIDE_MODAL';\nconst GET_SPECIES = 'GET_SPECIES';\nconst GET_FILMS = 'GET_FILMS';\nconst GET_HOMEWOLRD = 'GET_HOMEWOLRD';\nconst IS_LOADING = 'IS_LOADING';\n\n\nlet initialState = {\n    data: null,\n    isShow: false,\n    isLoading: false,\n}\n\nconst modalReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MODAL_DATA:\n            return {\n                ...state,\n                data: action.payload,\n                isShow: true,\n                isLoading: false\n            }\n\n        case HIDE_MODAL:\n            return {\n                ...state,\n                isShow: false,\n                isLoading: false\n            }\n\n        case GET_SPECIES:\n            return {\n                ...state,\n                data: { ...state.data, species: action.payload }\n            }\n        case GET_FILMS:\n            return {\n                ...state,\n                data: { ...state.data, films: action.payload }\n            }\n        case GET_HOMEWOLRD:\n            return {\n                ...state,\n                data: { ...state.data, homeword: action.payload }\n            }\n            case IS_LOADING:\n                return {\n                    ...state,\n                    isLoading: true\n                }\n\n            \n        default:\n            return state\n    }\n}\n\nexport const setModalDataSuccess = (data) => ({ type: SET_MODAL_DATA, payload: data });\nexport const setSpecies = (data) => ({ type: GET_SPECIES, payload: data });\nexport const setFilms = (data) => ({ type: GET_FILMS, payload: data });\nexport const setHomeword = (data) => ({ type: GET_HOMEWOLRD, payload: data });\nexport const isLoading = () => ({ type: IS_LOADING });\n\n\n\nexport const hideModal = () => ({ type: HIDE_MODAL });\n\nexport const setModalData = (data) => {\n    return async dispatch => {\n        dispatch(setModalDataSuccess(data))\n        dispatch(setSpeciesThunk(data))\n    }\n}\n\n\nexport const setSpeciesThunk = (data) => {\n    return async dispatch => {\n\n        let speciesPromise = await getDataFromArray(data.species, 'name')\n        let homeworldPromise = API.getInfo(data.homeworld)\n        let filmsPromise = getDataFromArray(data.films, 'title')\n\n        let species = await speciesPromise;\n        let homeworld = await homeworldPromise;\n        let films = await filmsPromise;\n        \n        dispatch(setSpecies(species))\n        dispatch(setHomeword(homeworld.data.name))\n        dispatch(setFilms(films))\n        dispatch(isLoading())\n\n    }\n}\n\nexport default modalReduser;","import React, { useState, useEffect } from 'react';\nimport '../Card/Card.scss';\nimport PropTypes from 'prop-types';\nimport { API } from '../../API/api';\n\nconst Card = ({ data, setModalData, setSpeciesThunk }) => {\n\n    let [species, setSpecies] = useState('unknown')\n\n    let openModal = () => {\n        setModalData(data)\n        document.querySelector('body').classList.add('scrolling-stop')\n\n    }\n\n    useEffect(() => {\n        if (data.species.length > 0) {\n            API.getInfo(data.species[0]).then(res => {\n                setSpecies(res.data.name)\n            })\n        }\n       \n\n    }, [data])\n    return (\n        <li className=\"card\" onClick={openModal} >\n            <span className=\"card__avatar\">{data.name[0]}</span>\n            <span className=\"card__name\">{data.name}</span>\n            <span className=\"card__species\">\n                {\n                    species\n                }\n            </span>\n        </li>\n    )\n}\n\nCard.propTypes = {\n    data: PropTypes.object\n};\n\nexport default Card;","import React from 'react';\nimport '../Content/Content.scss';\nimport './Transition.scss';\nimport Card from '../Card/Card';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\n\nconst Content = ({ data, isLoading, setModalData, setSpeciesThunk }) => {\n    return (\n        <TransitionGroup className=\"transition__wrap\">\n            <ul className=\"content__card-list\">\n\n                {\n                    isLoading\n                        ? 'Please wait...'\n                        : data.map((item) => {\n\n                            return (\n                                <CSSTransition\n                                    in={true}\n                                   \n                                    key={item.name}\n                                    timeout={500}\n                                    classNames=\"card\">\n                                    <Card key={item.name}\n                                        setModalData={setModalData}\n                                        setSpeciesThunk={setSpeciesThunk}\n                                        data={item}\n                                    />\n                                </CSSTransition>\n                            )\n                        })\n                }\n\n            </ul>\n\n        </TransitionGroup>\n    )\n}\n\n\n\nexport default Content;","import React, { useEffect, useState } from 'react';\nimport '../Search/Search.scss';\nimport useDebounce from '../../utils/useDebounce';\n\nconst Search = (props) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\n    const [active, setActive] = useState(false)\n\n    useEffect(\n        () => {\n            if (debouncedSearchTerm.length > 0) {\n                console.log(debouncedSearchTerm.length)\n                props.getDataFromSearching(debouncedSearchTerm)\n            } /* else if (debouncedSearchTerm.length === 0) {\n                props.getPeoples(1)\n            } */\n        },\n        [debouncedSearchTerm]\n    );\n\n    return (\n        <>\n            <div className=\"search__wrap\">\n                <div className=\"search__container\">\n                    <label htmlFor=\"search\"\n                        className={\"search__label\" + (active ? \" search__label--active\" : '')}>Search by name</label>\n                    <input className=\"search\" type=\"text\" id=\"search\" value={searchTerm}\n\n                        onFocus={() => {\n                            setActive(true)\n                            props.isSearching(true)\n                        }}\n\n                        onKeyPress={e => {\n                            if (e.keyCode === 13) {\n                                setSearchTerm(e.target.value)\n                            }\n                        }}\n\n                        onChange={e => {\n                            setSearchTerm(e.target.value)\n                        }}\n                        onBlur={() => {\n                            setSearchTerm('')\n                            setActive(false)\n                            props.getPeoples()\n                            props.isSearching(false)\n                        }}></input>\n                </div>\n          \n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M16.6667 14.6667H15.6133L15.24 14.3067C16.5467 12.7867 17.3333 10.8133 17.3333 8.66667C17.3333 3.88 13.4533 0 8.66667 0C3.88 0 0 3.88 0 8.66667C0 13.4533 3.88 17.3333 8.66667 17.3333C10.8133 17.3333 12.7867 16.5467 14.3067 15.24L14.6667 15.6133V16.6667L21.3333 23.32L23.32 21.3333L16.6667 14.6667ZM8.66667 14.6667C5.34667 14.6667 2.66667 11.9867 2.66667 8.66667C2.66667 5.34667 5.34667 2.66667 8.66667 2.66667C11.9867 2.66667 14.6667 5.34667 14.6667 8.66667C14.6667 11.9867 11.9867 14.6667 8.66667 14.6667Z\" fill=\"#808080\" />\n            </svg>\n\n  \n            </div >\n        </>\n    )\n}\n\nexport default Search;","import { useState, useEffect } from 'react';\n\n\nexport default function useDebounce(value, delay) {\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n\n    [value, delay]\n  );\n\n  return debouncedValue;\n}","import React from 'react';\nimport starShip from '../../assets/img/preloader.svg';\nimport './Preloader.scss'\n\nconst Preloader = (props) => {\n    return (\n        <div className=\"preloader__wrapper\">\n            <div className=\"preloader\">\n                <div className=\"starship\">\n                    <img src={starShip}></img>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Preloader;","\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReduser = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport default appReduser;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getPeoples, getDataFromSearching, isSearchingToggle } from '../../store/peoplesReduser';\nimport { setModalData, setSpeciesThunk } from '../../store/modalReduser';\n\nimport Content from '../Content/Content';\nimport Search from '../Search/Search';\nimport Preloader from '../Preloader/Preloader';\nimport { setInitializedSuccess } from '../../store/appReduser';\n\n\nconst increasePage = (state) => {\n    return { page: state.page + 1 }\n}\n\n\nclass ContentContainer extends React.Component {\n    state = {\n        page: 1,\n    }\n\n    componentDidMount() {\n        this.props.getPeoples(this.state.page)\n        window.addEventListener('scroll', this.handleScroll);\n        this.timerHandle = setTimeout(() => {\n            this.props.setInitializedSuccess()\n        }, 3000)\n\n    }\n\n    componentDidUpdate() {\n        if (!this.props.isSearching) {\n\n            window.addEventListener('scroll', this.handleScroll);\n\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n        if (this.timerHandle) {\n            clearTimeout(this.timerHandle);\n            this.timerHandle = 0;\n        }\n    }\n\n    handleScroll = (event) => {\n        if (event.target.body.getBoundingClientRect().bottom < 700 && !this.props.isSearching) {\n            console.log(event.target.body.getBoundingClientRect().bottom)\n            this.handleChangePage()\n        }\n    }\n\n    handleChangePage = () => {\n        if (this.props.maxPages > this.state.page) {\n            this.setState(increasePage)\n            this.props.getPeoples(this.state.page)\n        }\n    }\n\n\n\n    render() {\n        return (\n            <main className=\"content\">\n                {(!this.props.isLoading && this.props.initialized)\n                    ? <>\n                        <Search getDataFromSearching={this.props.getDataFromSearching}\n                            getPeoples={this.props.getPeoples}\n                            isSearching={this.props.isSearchingToggle} />\n                        <Content\n                            data={this.props.data}\n                            isLoading={this.props.isLoading}\n                            setModalData={this.props.setModalData}\n                            setSpeciesThunk={this.props.setSpeciesThunk}\n                        />\n                    </>\n                    : <Preloader />\n                }\n\n            </main>\n\n        )\n    }\n\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    data: state.peoples.data,\n    isLoading: state.peoples.isLoading,\n    maxPages: state.peoples.maxPages,\n    isSearching: state.peoples.isSearching,\n})\n\nexport default connect(mapStateToProps,\n    {\n        setInitializedSuccess,\n        getPeoples,\n        setModalData,\n        setSpeciesThunk,\n        getDataFromSearching,\n        isSearchingToggle\n    })(ContentContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst portalRoot = document.getElementById('modal-root');\n\n\nclass Portal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return ReactDOM.createPortal(children, this.el );\n  }\n}\n\n\nexport default Portal;","import React from 'react';\n\nimport gender from '../../assets/img/gender.svg';\nimport homeword from '../../assets/img/homeword.svg';\nimport speciesIcon from '../../assets/img/species.svg';\nimport films from '../../assets/img/films.svg';\nimport birth_year from '../../assets/img/birth_year.svg';\n\n\n\nconst Modalbody = ({ data, closeModal }) => {\n\n    return (\n\n        <div className=\"modalBody\">\n            <div className=\"modal-header\">\n                <div className='card__avatar'>{data.name[0]}</div>\n                <p className=\"card__name\">{data.name}</p>\n                <button className=\"modal_close\" onClick={closeModal}>\n\n                </button>\n            </div>\n            <ul className=\"modal-footer\">\n                <li className=\"modal__item\">\n                    <div className=\"modal__item-title\">\n                        <img src={birth_year} alt='icon' />\n                        <span>Birth year </span>\n                    </div>\n\n                    <span>{data.birth_year}</span>\n                </li>\n\n                <li className=\"modal__item\">\n                    <div className=\"modal__item-title\">\n                        <img src={speciesIcon} alt='icon' />\n                        <span>species</span>\n                    </div>\n                    <span>{data.species ? data.species : \"loading...\"}</span>\n                </li>\n                <li className=\"modal__item\">\n                    <div className=\"modal__item-title\">\n                        <img src={gender} alt='icon' />\n                        <span>Gender </span>\n                    </div>\n\n                    <span>{data.gender}</span>\n                </li>\n                <li className=\"modal__item\">\n                    <div className=\"modal__item-title\">\n                        <img src={homeword} alt='icon' />\n                        <span>Homeworld </span>\n                    </div>\n\n                    <span>{data.homeworld ? data.homeword : \"loading...\"}</span>\n                </li>\n                <li className=\"modal__item modal__item--films\">\n                    <div className=\"modal__item-title\">\n                        <div className=\"wrap\">\n                            <img src={films} alt='icon' />\n                            <span>Films </span>\n                        </div>\n                    </div>\n\n                    <span className=\"modal__films-titles\">\n                        {(data.films)\n                            ? data.films.map(film => <span key={film}>{film}</span>)\n                            : \"loading...\"}\n                    </span>\n                </li>\n            </ul>\n\n        </div>\n\n    )\n}\n\n\n\nexport default Modalbody;","import React from 'react';\nimport '../Modal/Modal.scss';\nimport Portal from '../Portal/Portal';\nimport Modalbody from './Modalbody';\nimport Preloader from '../Preloader/Preloader';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\n\nconst Modal = ({ data, isShow, hideModal, isLoading }) => {\n\n\n    const closeModal = (e) => {\n        if (e.target.classList.contains('modal-wrapper') || e.target.classList.contains('modal_close')) {\n            hideModal()\n            document.querySelector('body').classList.remove('scrolling-stop')\n        }\n    }\n\n\n    return (\n        isShow && <TransitionGroup> <Portal>\n\n                <div className=\"modal-wrapper\" onClick={closeModal}>\n                    {isLoading\n                        ? <CSSTransition\n                            in={isLoading}\n                            timeout={{\n                                enter: 500,\n                                exit: 1000\n                            }}\n                            classNames=\"modalBody\">\n                            <Modalbody data={data} closeModal={closeModal} />\n                        </CSSTransition>\n                        : <Preloader />}\n\n\n                </div>\n\n            </Portal>\n        </TransitionGroup>\n    )\n}\n\n\n\nexport default Modal;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport ContentContainer from './components/Content/ContentContainer';\nimport Modal from './components/Modal/Modal';\nimport { connect } from 'react-redux';\nimport { hideModal } from './store/modalReduser';\n\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className={'App' + (this.props.modal.isShow ? ' blur' : '') }>\n        <Header />\n        <ContentContainer />\n        <Footer />\n\n        { this.props.modal.data && <Modal {...this.props.modal} hideModal={this.props.hideModal}/>}\n        \n\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  peoples: state.peoples,\n  modal: state.modal,\n})\n\n\nexport default connect(mapStateToProps, { hideModal })(App);","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport appReduser from \"./appReduser\";\nimport peoplesReduser from \"./peoplesReduser\";\nimport modalReduser from \"./modalReduser\";\n\n\nlet reducers = combineReducers({\n    app: appReduser,\n    peoples: peoplesReduser,\n    modal: modalReduser, \n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nconst appRoot = document.getElementById('root');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n \n        <App />\n  \n\n    </Provider>\n  </React.StrictMode>,\n  appRoot\n);\n\n"],"sourceRoot":""}